---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/doctors":
    get:
      summary: Retrieves a list of doctors
      tags:
      - Doctors
      parameters:
      - name: Name
        in: query
        description: Filter doctors by name
        schema:
          type: string
      - name: city
        in: query
        description: Filter doctors by city
        schema:
          type: string
      - name: specialisation
        in: query
        description: Filter doctors by specialisation
        schema:
          type: string
      - name: price
        in: query
        description: Filter doctors by price
        schema:
          type: integer
      - name: duration
        in: query
        description: Filter doctors by duration
        schema:
          type: string
      - name: image_url
        in: query
        description: Filter doctors by image_url
        schema:
          type: string
      responses:
        '200':
          description: doctors found
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    specialisation:
                      type: string
                    city:
                      type: string
                    price:
                      type: integer
                    duration:
                      type: string
                    image_url:
                      type: string
  "/api/v1/users":
    post:
      summary: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/users/sign_in":
    post:
      summary: Sign in a user
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: login successful
        '422':
          description: invalid login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
